openapi: 3.0.3
info:
  title: Time Tracker API
  version: 1.0.0
servers:
  - url: http://localhost:8000/api/v1
    description: Local server
paths:
  /tasks:
    post:
      summary: Add new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                  example: 4
                name: 
                  type: string
                  example: "Buy milk"
                description:
                  type: string
                  example: "Buy milk from the store on Pushkin Street"
      responses:
        '201':
          description: Task added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
        '400':
          description: Invalid request
  /users:
    get:
      summary: Get users
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            example: 1
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            example: 10
        - name: passportNumber
          in: query
          required: false
          schema:
            type: string
          example: "1234 567890"
        - name: surname
          in: query
          required: false
          schema:
            type: string
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: patronymic
          in: query
          required: false
          schema:
            type: string
        - name: address
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: User list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Invalid request
    post:
      summary: Add new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                passportNumber:
                  type: string
                  example: "1234 567890"
      responses:
        '200':
          description: User added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
        '400':
          description: Invalid request

  /users/{userId}:
    put:
      summary: Update user data
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
          example: 123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: string
                example: "ok"
        '404':
          description: User not found
    delete:
      summary: Delete user
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User deleted successfully
        '404':
          description: User not found

  /users/{userId}/tasks:
    get:
      summary: Get user tasks with time spent
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
            example: '2023-01-01'
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
            example: '2023-12-31'
      responses:
        '200':
          description: User tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '400':
          description: Invalid request

  /users/tasks/{taskId}/start:
    post:
      summary: Start task timer for user
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task timer started
        '404':
          description: User or task not found

  /users/tasks/{taskId}/stop:
    post:
      summary: Stop task timer for user
      parameters:
        - name: taskId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task timer stopped
        '404':
          description: User or task not found

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        passportNumber:
          type: string
        surname:
          type: string
        name:
          type: string
        patronymic:
          type: string
        address:
          type: string

    UpdateUserRequest:
      type: object
      properties:
        passportNumber:
          type: string
        surname:
          type: string
        name:
          type: string
        patronymic:
          type: string
        address:
          type: string

    Task:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        timeSpent:
          type: string
          example: "95.1234123"
